"use strict";(self.webpackChunkstoneDB=self.webpackChunkstoneDB||[]).push([[753],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,N=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(N,i(i({ref:t},c),{},{components:n})):r.createElement(N,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},43863:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],l={id:"comparison-operators",sidebar_position:6.33},p="Comparison Operators",s={unversionedId:"SQL-reference/operators/comparison-operators",id:"SQL-reference/operators/comparison-operators",title:"Comparison Operators",description:"This topic describes the comparison operators supported StoneDB.",source:"@site/docs/05-SQL-reference/03-operators/comparison-operators.md",sourceDirName:"05-SQL-reference/03-operators",slug:"/SQL-reference/operators/comparison-operators",permalink:"/zh/docs/SQL-reference/operators/comparison-operators",draft:!1,editUrl:"https://github.com/stoneatom/stonedb-docs/edit/main/i18n/zh/docusaurus-plugin-content-docs/current/05-SQL-reference/03-operators/comparison-operators.md",tags:[],version:"current",lastUpdatedBy:"Ma Jun",lastUpdatedAt:1657246864,formattedLastUpdatedAt:"2022/7/8",sidebarPosition:6.33,frontMatter:{id:"comparison-operators",sidebar_position:6.33},sidebar:"autoSidebar",previous:{title:"Bitwise Operators",permalink:"/zh/docs/SQL-reference/operators/bitwise-operators"},next:{title:"Logical Operators",permalink:"/zh/docs/SQL-reference/operators/logical-operators"}},c={},d=[],u={toc:d};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"comparison-operators"},"Comparison Operators"),(0,o.kt)("p",null,"This topic describes the comparison operators supported StoneDB. "),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"Operator")),(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"Description")))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"=")),(0,o.kt)("td",{parentName:"tr",align:null},"Equal operator")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},">")),(0,o.kt)("td",{parentName:"tr",align:null},"Greater than operator")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"<")),(0,o.kt)("td",{parentName:"tr",align:null},"Less than operator")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},">=")),(0,o.kt)("td",{parentName:"tr",align:null},"Greater than or equal operator")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"<=")),(0,o.kt)("td",{parentName:"tr",align:null},"Less than or equal operator")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"!="),", ",(0,o.kt)("inlineCode",{parentName:"td"},"<>")),(0,o.kt)("td",{parentName:"tr",align:null},"Not equal operator")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"<=>")),(0,o.kt)("td",{parentName:"tr",align:null},"NULL-safe equal operator")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"BETWEEN\u2026 AND\u2026")),(0,o.kt)("td",{parentName:"tr",align:null},"Whether a value is within a value range")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"IN")),(0,o.kt)("td",{parentName:"tr",align:null},"Whether a value is within a set of values")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"NOT IN")),(0,o.kt)("td",{parentName:"tr",align:null},"Whether a value is not within a set of values")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"LIKE")),(0,o.kt)("td",{parentName:"tr",align:null},"Simple pattern matching")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"regexp")),(0,o.kt)("td",{parentName:"tr",align:null},"Regular expression")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"IS NULL")),(0,o.kt)("td",{parentName:"tr",align:null},"NULL value test")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"IS NOT NULL")),(0,o.kt)("td",{parentName:"tr",align:null},"NOT NULL value test")))),(0,o.kt)("p",null,"The following code provides an example of using each operator."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"> select 2=3;\n+-----+\n| 2=3 |\n+-----+\n|   0 |\n+-----+\n1 row in set (0.00 sec)\n\n> select 2>3;\n+-----+\n| 2>3 |\n+-----+\n|   0 |\n+-----+\n1 row in set (0.00 sec)\n\n> select 2<3;\n+-----+\n| 2<3 |\n+-----+\n|   1 |\n+-----+\n1 row in set (0.00 sec)\n\n> select 2>=3;\n+------+\n| 2>=3 |\n+------+\n|    0 |\n+------+\n1 row in set (0.00 sec)\n\n> select 2<=3;\n+------+\n| 2<=3 |\n+------+\n|    1 |\n+------+\n1 row in set (0.00 sec)\n\n> select 2<>3;\n+------+\n| 2<>3 |\n+------+\n|    1 |\n+------+\n1 row in set (0.00 sec)\n\n> select 2<=>3;\n+-------+\n| 2<=>3 |\n+-------+\n|     0 |\n+-------+\n1 row in set (0.01 sec)\n\n> select 5 between 1 and 10;\n+--------------------+\n| 5 between 1 and 10 |\n+--------------------+\n|                  1 |\n+--------------------+\n1 row in set (0.00 sec)\n\n> select 5 in (1,2,3,4,5);\n+------------------+\n| 5 in (1,2,3,4,5) |\n+------------------+\n|                1 |\n+------------------+\n1 row in set (0.00 sec)\n\n> select 5 not in (1,2,3,4,5);\n+----------------------+\n| 5 not in (1,2,3,4,5) |\n+----------------------+\n|                    0 |\n+----------------------+\n1 row in set (0.00 sec)\n\n> select '12345' like '12%';\n+--------------------+\n| '12345' like '12%' |\n+--------------------+\n|                  1 |\n+--------------------+\n1 row in set (0.00 sec)\n\n> select 'beijing' REGEXP 'jing';\n+-------------------------+\n| 'beijing' REGEXP 'jing' |\n+-------------------------+\n|                       1 |\n+-------------------------+\n1 row in set (0.00 sec)\n\n> select 'beijing' REGEXP 'xi';\n+-----------------------+\n| 'beijing' REGEXP 'xi' |\n+-----------------------+\n|                     0 |\n+-----------------------+\n1 row in set (0.00 sec)\n\n> select 'a' is NULL;\n+-------------+\n| 'a' is NULL |\n+-------------+\n|           0 |\n+-------------+\n1 row in set (0.00 sec)\n\n> select 'a' IS NOT NULL;\n+-----------------+\n| 'a' IS NOT NULL |\n+-----------------+\n|               1 |\n+-----------------+\n1 row in set (0.00 sec)\n")))}m.isMDXComponent=!0}}]);